/*
 *  corba.js Object Request Broker (ORB) and Interface Definition Language (IDL) compiler
 *  Copyright (C) 2018, 2021 Mark-Andr√© Hopf <mhopf@mark13.org>
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

/*
 * IDL for basics.spec.ts
 */

valuetype Origin {
    public double x, y;
};

valuetype Size {
    public double width, height;
};

valuetype Figure {
    public unsigned long id;
};

valuetype Rectangle: Figure {
    public Origin origin;
    public Size size;
};

valuetype FigureModel {
    public sequence<Figure> data;
};

enum AttributeType {
    STROKE_RGBA,
    FILL_RGBA,
    STROKE_WIDTH
};
struct RGBA {
    octet r, g, b;
    octet a;
};
union Attribute switch(AttributeType) {
    case STROKE_RGBA: RGBA strokeRGBA;
    case FILL_RGBA: RGBA fillRGBA;
    case STROKE_WIDTH: double strokeWidth;
};
typedef sequence<Attribute> AttributeSeq;

interface Client {
    short methodC(); // return type is to be able to drop 'oneway'
    oneway void setFigureModel(in FigureModel figuremodel);
};

interface Server {
    readonly attribute string id;
    attribute string message;
    oneway void setClient(in Client client);
    sequence<Server> getClients();
    oneway void methodA();
    short methodB(); // return type is to be able to drop 'oneway'
    double answer(in double a, in double b);

    RGBA twistColor(in RGBA color);
    void setAttributes(in AttributeSeq attributes);
};

struct Struct {
    string s;
    Client o;
    AttributeType e;
};
